name: Create Version Label

on:
  workflow_call:
    secrets:
      REPO_TOKEN:
        description: 'Token to access to repository'
        required: true
    inputs:
      app-name:
        required: true
        type: string
      skip-tag:
        required: false
        default: false
        type: boolean
      root-path:
        required: false
        type: string
        default: .

jobs:
  create_label:
    runs-on: windows-latest
    name: Create Version Label
    defaults:
      run:
        working-directory: ${{ inputs.root-path }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
        with:
          token: ${{ secrets.REPO_TOKEN }}
      - name: Set New Versions
        shell: pwsh
        run: |
          $scriptsPath = Join-Path "${{ github.workspace }}" "build/scripts"
          $incrementMajor = $false;
          $incrementMinor = $false;
          $incrementBuildNumber = $true;
          $splitRepositoryName = "${{ github.repository }}" -split "/"
          if ($splitRepositoryName.Length -ne 2) {
            throw "Repository name can't be parsed: ${{ github.repository }}"
          }
          $pullRequestId = (. (Join-Path $scriptsPath "Get-PullRequests.ps1") -SHA "${{ github.sha }}" -Owner $splitRepositoryName[0] -Repository $splitRepositoryName[1])[0]
          if ($pullRequestId) {
            $labels = . (Join-Path $scriptsPath "Get-Labels.ps1") -PullRequestId $pullRequestId -Owner $splitRepositoryName[0] -Repository $splitRepositoryName[1]
            if ($labels -contains "breaking changes") {
              $incrementMajor = $true;
              $incrementMinor = $false;
              $incrementBuildNumber = $false;
            }
            if ($labels -contains "enhancement") {
              $incrementMajor = $false;
              $incrementMinor = $false;
              $incrementBuildNumber = $true;
            }
            if ($labels -contains "bug" -or $labels -contains "minor enhancement") {
              $incrementMajor = $false;
              $incrementMinor = $false;
              $incrementBuildNumber = $true;
            }
            if ($labels -contains "misc") {
              $incrementMajor = $false;
              $incrementMinor = $false;
              $incrementBuildNumber = $true;
            }
          }
          $newVersion = . (Join-Path $scriptsPath "Set-Version.ps1") -IncrementMajor:$incrementMajor -IncrementMinor:$incrementMinor -IncrementBuildNumber:$incrementBuildNumber
          "new-version=$newVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Submit New Version
        run: |
          git config --global user.name "$env:GITHUB_ACTOR"
          git config --global user.email "$env:GITHUB_ACTOR@users.noreply.github.com"
          git pull
          git commit -am "[automated] Bumped ${{ inputs.app-name }} version to ${{ env.new-version }} [skip ci]"
          if ("${{ inputs.skip-tag }}" -eq "false") { git tag v${{ env.new-version }} }
          git push
          git push --tags
