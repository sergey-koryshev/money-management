name: Release

run-name: Release @${{ github.sha }}

on:
  push:
    branches:
      - release/*
  repository_dispatch:
    types: [release_branch_created]

env:
  REGISTRY: ghcr.io

jobs:
  release-build:
    name: Backend Build
    uses: ./.github/workflows/dotnet-build.yml
    with:
      root-path: source/backend
      dotnet-version: 7.0.x
      solution-path: Backend.sln
      build-configuration: Release
      test-project-path: Backend.Tests/Backend.Tests.csproj
      build-migrations-bundle: true
  prod-build:
    name: Frontend Build
    uses: ./.github/workflows/node-build.yml
    with:
      node-version: 16.x
      root-path: source/frontend
      build-command: "npm run build"
  publish-docker-images:
    name: Publishing Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout build-system repository
        uses: actions/checkout@v4
        with:
          repository: sergey-koryshev/build-system
          ref: version-helper-v1.4.0
          path: build-system
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load versions
        id: versions
        shell: pwsh
        run: |
          Import-Module "./build-system/scripts/ps/VersionHelper" -Verbose -Force -ErrorAction Stop
          Import-Module "./build/WebApiIncrementVersionHelper.psm1" -Verbose -Prefix "x" -Force -ErrorAction Stop
          $currentFolder = pwd
          cd "source/frontend"
          "frontend=$(Get-Version -ProjectType Node)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          cd "../backend"
          "backend=$(Get-Version -ProjectType Custom)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          cd $currentFolder

      - name: Build and push Docker image for Backend
        id: backend-push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:source/backend"
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ github.actor }}/money-management/backend:${{ steps.versions.outputs.backend }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.licenses=AGPL 3.0
      
      - name: Generate artifact attestation for Backend
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.actor }}/money-management/backend
          subject-digest: ${{ steps.backend-push.outputs.digest }}
          push-to-registry: false

      - name: Build and push Docker image for Frontend
        id: frontend-push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:source/frontend"
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ github.actor }}/money-management/frontend:${{ steps.versions.outputs.frontend }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.licenses=AGPL 3.0
      
      - name: Generate artifact attestation for Frontend
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.actor }}/money-management/frontend
          subject-digest: ${{ steps.frontend-push.outputs.digest }}
          push-to-registry: false

